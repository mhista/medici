plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.medici"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        // fLAG TO enable support for the new language APIs
        // coreLibraryDesugaringEnabled true
        // sets java cmpatibility to java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.medici"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    
    // ...
    packagingOptions {
      // Exclude AI denoise extension for the armeabi-v7a architecture
      exclude 'lib/armeabi-v7a/libagora_ai_denoise_extension.so'
      // Exclude AI denoise extension for the arm64-v8a architecture
      exclude 'lib/arm64-v8a/libagora_ai_denoise_extension.so'
      // Exclude spatial audio extension for the armeabi-v7a architecture
      exclude 'lib/armeabi-v7a/libagora_spatial_audio_extension.so'
      // Exclude spatial audio extension for the arm64-v8a architecture
      exclude 'lib/arm64-v8a/libagora_spatial_audio_extension.so'
    // exclude sccreenshot for the arm64-v8a architecture
      exclude 'libagora_content_inspect_extensio.so'
    //  exclude face capture for the arm64-v8a architecture
      exclude 'libagora_face_capture_extension.so'
}

}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.android.support:multidex:2.0.1'
    // coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'


}
// apply plugin: 'com.google.gms.google-services'
